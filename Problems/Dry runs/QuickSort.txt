Initial Array: [34, 23, 67, 87, 21, 12, 9]

Calling quickSort(arr, 0, 6) with pivot = 9
Partitioning with pivot = 9 at index 6
i = -1
j = 0: 34 > 9, no swap
j = 1: 23 > 9, no swap
j = 2: 67 > 9, no swap
j = 3: 87 > 9, no swap
j = 4: 21 > 9, no swap
j = 5: 12 > 9, no swap
Swapping pivot 9 with arr[0] = 34
Array after partition: [9, 23, 67, 87, 21, 12, 34]
Pivot placed at index 0

Calling quickSort(arr, 0, -1)
Range invalid, returning

Calling quickSort(arr, 1, 6) with pivot = 34
Partitioning with pivot = 34 at index 6
i = 0
j = 1: 23 < 34, swap arr[1] with arr[1]
j = 2: 67 > 34, no swap
j = 3: 87 > 34, no swap
j = 4: 21 < 34, i = 1, swap arr[2] with arr[4]
Array now: [9, 23, 21, 87, 67, 12, 34]
j = 5: 12 < 34, i = 2, swap arr[3] with arr[5]
Array now: [9, 23, 21, 12, 67, 87, 34]
Swapping pivot 34 with arr[4] = 67
Array after partition: [9, 23, 21, 12, 34, 87, 67]
Pivot placed at index 4

Calling quickSort(arr, 1, 3) with pivot = 12
Partitioning with pivot = 12 at index 3
i = 0
j = 1: 23 > 12, no swap
j = 2: 21 > 12, no swap
Swapping pivot 12 with arr[1] = 23
Array after partition: [9, 12, 21, 23, 34, 87, 67]
Pivot placed at index 1

Calling quickSort(arr, 1, 0)
Range invalid, returning

Calling quickSort(arr, 2, 3) with pivot = 23
Partitioning with pivot = 23 at index 3
i = 1
j = 2: 21 < 23, swap arr[2] with arr[2]
Swapping pivot 23 with arr[3]
Array after partition: [9, 12, 21, 23, 34, 87, 67]
Pivot placed at index 3

Calling quickSort(arr, 2, 2)
Single element, returning

Calling quickSort(arr, 4, 3)
Range invalid, returning

Calling quickSort(arr, 5, 6) with pivot = 67
Partitioning with pivot = 67 at index 6
i = 4
j = 5: 87 > 67, no swap
Swapping pivot 67 with arr[5] = 87
Array after partition: [9, 12, 21, 23, 34, 67, 87]
Pivot placed at index 5

Calling quickSort(arr, 5, 4)
Range invalid, returning

Calling quickSort(arr, 6, 6)
Single element, returning

Final Sorted Array: [9, 12, 21, 23, 34, 67, 87]